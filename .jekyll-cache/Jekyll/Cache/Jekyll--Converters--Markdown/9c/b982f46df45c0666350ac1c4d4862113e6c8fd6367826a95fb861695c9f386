I"Â<p>This is blog post is a response to Balaji Srinivasanâ€™s <strong>Open Problems in Crypto Infrastructure</strong> <a href="https://youtu.be/l2VQkbucXns?t=1077">YouTube video</a>. Particularly, we show a toy solution for the <strong>Automated Accounting, Triple-Entry Bookkeeping, Streaming Financials</strong> problem.</p>

<p>The code corresponding to this blog post is on Github <a href="">here</a>. The code uses Solidity, TypeScript, and the Hardhat Ethereum development environment.</p>

<h2 id="basics-of-accounting">Basics of Accounting</h2>
<p>We closely follow Thomas Ittelsonâ€™s presentation of accounting in his book <em>Financial Accounting</em>. In accounting, there are three financial statements:</p>
<ul>
  <li>
    <p><strong>Balance Sheet</strong>: Contains information about what a company has (Assets), what it owes (Liabilities), and what itâ€™s worth (Equity) at a particular point in time. It always maintains the invariant <strong>Assets = Liabilities + Equity</strong>. The types of entries of a basic balance sheet can be seen in the figure below:</p>
  </li>
  <li>
    <p><strong>Income Statement</strong>: Contains information about the making and selling activities over a period of time. It documents the details of the equality <strong>Sales - Costs &amp; Expenses = Income</strong>. The types of entries of a basic income statement can be seen in the figure below:</p>
  </li>
  <li>
    <p>Cash Flow Statement:</p>
  </li>
</ul>

<p>There are various actions that change the entries in these statements. For instance,</p>

<h2 id="implementing-an-accounting-smart-contract-in-solidity">Implementing an Accounting Smart Contract in Solidity</h2>

<p>We now describe the main smart contract</p>
:ET